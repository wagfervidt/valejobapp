const normSDist = require('./NORM_S_DIST.runtime');
const stdev = require('./STDEV.runtime');
const average = require('./AVERAGE.runtime');

const zTest = (data, value, stdevDefault) => {
  if (!data.length) {
    return null;
  }
  if (stdevDefault == null && data.length <= 1) {
    return null;
  }
  const stdevRes = (stdevDefault == null) ? stdev([data]) : stdevDefault;
  const score = (average([data]) - value) / (stdevRes / Math.sqrt(data.length));
  return 1 - normSDist([score]);
};

module.exports = ([data, value, stdevDefault]) => {
  if (!(Array.isArray(data))) {
    return null;
  }
  if (typeof value !== 'number' || !Number.isFinite(value)) {
    return null;
  }
  const stdevValid = (typeof stdevDefault !== 'number' || !Number.isFinite(stdevDefault))
    ? null
    : stdevDefault;

  const dataValid = data.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const result = zTest(dataValid, value, stdevValid);
  return Number.isFinite(result) ? result : null;
};
