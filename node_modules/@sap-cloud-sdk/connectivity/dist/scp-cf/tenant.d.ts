import { JwtPayload } from './jsonwebtoken-type';
/**
 * Get the tenant ID of a decoded JWT, based on its `zid` property or, if not available, the `iss` subdomain.
 * @param token - Token to read the tenant ID from.
 * @returns The tenant ID, if available.
 * @internal
 */
export declare function getTenantIdWithFallback(token: string | undefined): string | undefined;
/**
 * Compare two decoded JWTs based on their `tenantId`s.
 * @param userTokenPayload - User JWT payload.
 * @param providerTokenPayload - Provider JWT payload.
 * @returns Whether the tenant is identical.
 * @internal
 */
export declare function isIdenticalTenant(userTokenPayload: JwtPayload, providerTokenPayload: JwtPayload): boolean;
