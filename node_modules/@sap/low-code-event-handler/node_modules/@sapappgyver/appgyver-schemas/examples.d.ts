import type { NullableSchema } from './schemas';
/**
 * Returns an array of example values for the given schema.
 * If the schema defines `examples`, then those are returned.
 * Alternatively this builds an array of examples using the `enum`,
 * `default` and `format` properties of the schema. If no examples
 * can be found, then an empty array is returned.
 *
 * If the schema is a combination schema, then the example values
 * are collected from sub-schemas.
 *
 * Note that this function assumes immutability and it is not safe to mutate
 * the returned array of its contents! Please clone the returned value if
 * you are planning to mutate the results!
 *
 * If optional second parameter is true, then this attempts to return at least
 * one example value even if the schema does not include any information what
 * kind of values the schema could contain. For example, for "string" types it
 * includes a blank string, for "number" type it includes zero (0), and for "json"
 * type it includes an empty object.
 *
 * @param {object} schema schema definition object
 * @param {boolean} force whether to attempt to force-generate at least 1 value
 */
export declare function getExampleValues(schema: NullableSchema, force?: boolean): any[];
