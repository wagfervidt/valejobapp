const fact = require('../math/FACTORIAL.runtime');

const distPoisson = (k, l) => (l ** k) * Math.exp(-l) / fact([k]);

const cumulativePoisson = (x, l) => {
  const poissonArr = [];
  for (let k = 0; k <= x; k++) {
    poissonArr.push(distPoisson(k, l));
  }
  return poissonArr.reduce((total, item) => total + item, 0);
};

module.exports = ([x, mean, cumulative]) => {
  if (
    typeof x === 'number'
      && Number.isFinite(x)
      && typeof mean === 'number'
      && Number.isFinite(mean)
  ) {
    if (x < 0 || mean < 0) {
      return null;
    }
    const validX = Math.floor(x);
    const result = cumulative
      ? cumulativePoisson(validX, mean)
      : distPoisson(validX, mean);
    return Number.isFinite(result) ? result : null;
  }
  return null;
};
