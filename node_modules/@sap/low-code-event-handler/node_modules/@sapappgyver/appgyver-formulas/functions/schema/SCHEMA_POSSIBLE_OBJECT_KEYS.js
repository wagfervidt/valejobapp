const execute = require('./SCHEMA_POSSIBLE_OBJECT_KEYS.runtime');

module.exports = {
  name: 'SCHEMA_POSSIBLE_OBJECT_KEYS',
  category: 'Schema',
  title: 'Get possible property names of schema',
  description: 'Returns a list of possible known property names by the given schema representing an object.\n\n'
    + 'For example, if you have a schema representing an object that may have properties `name` and `weight`, then this function will return an array `["name", "weight"]`.\n\n'
    + 'Returns an empty list if the parameter schema represents an object but it has no known properties. Returns `null` if the parameter is not a schema representing an object.',
  parameters: [{
    type: 'schema',
    title: 'Schema',
    description: 'Schema from which to get the possible property names',
    schema: {
      type: 'object',
    },
  }],
  analyze: () => ({
    schema: {
      type: 'array',
      items: { type: 'string' },
    },
  }),
  execute,
  examples: [
    {
      context: {
        animalSchema: {
          type: 'object',
          properties: {
            name: { type: 'string' },
            weight: { type: 'number' },
          },
        },
      },
      expression: 'SCHEMA_POSSIBLE_OBJECT_KEYS(animalSchema)',
      result: ['name', 'weight'],
    },
    {
      context: {
        personSchema: {
          type: 'object',
          properties: {
            id: { type: 'string' },
            name: { type: 'string' },
          },
          required: ['id'],
        },
      },
      expression: 'SCHEMA_POSSIBLE_OBJECT_KEYS(personSchema)',
      result: ['id', 'name'],
    },
  ],
};
