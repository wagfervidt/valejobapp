const execute = require('./MAP.runtime');

module.exports = {
  name: 'MAP',
  category: 'List',
  title: 'Transforms each item in the list to another',
  description: `Goes through each item in the given list and evaluates an formula for each of them. Returns a list with the evaluated values.

The returned list has the same length than the original list, and the order of its items correspond the order in the original list.`,
  parameters: [{
    type: 'array',
    title: 'List',
    description: 'List of items to transform',
    inversible: true,
    items: {
      $id: '#item', // Make this a generic type
    },
  }, {
    type: 'function',
    title: 'Transform formula',
    description: 'Formula to be evaluated for each item',
    inversible: true,
    parameters: [{
      name: 'item',
      title: 'Current item',
      description: 'The current item from the original list',
      $ref: '#item', // Refers to the generic type
    }, {
      name: 'index',
      type: 'number',
      minimum: 0,
      title: 'Current index',
      description: 'The position of the current item in the list as an index number starting from 0',
      examples: [0, 1, 2],
    }],
    returnValue: {
      title: 'Transformed item',
      description: 'Transformed value to be set to the result list to the corresponding index',
    },
  }],
  maxInversions: 2,
  analyze: ([, transformedItem]) => {
    const transformedItemSchema = transformedItem && transformedItem.schema;
    return {
      schema: !transformedItemSchema ? { type: 'array' } : {
        type: 'array',
        items: transformedItemSchema,
      },
    };
  },
  execute,
  examples: [
    {
      expression: 'MAP(animals, item.name)',
      context: {
        animals: [
          { name: 'dog', weight: 123 },
          { name: 'cat', weight: 48 },
          { name: 'rat', weight: 10 },
        ],
      },
      result: ['dog', 'cat', 'rat'],
    },
    {
      expression: 'MAP(products, index + ": " + item.name)',
      context: {
        products: [
          { name: 'Duct tape', price: 5 },
          { name: 'Swiss army knife', price: 60 },
        ],
      },
      result: [
        '0: Duct tape',
        '1: Swiss army knife',
      ],
    },
    {
      expression: 'MAP<product>(products, product.name + " (" + product.price + "€)")',
      context: {
        products: [
          { name: 'Duct tape', price: 5 },
          { name: 'Swiss army knife', price: 60 },
        ],
      },
      result: [
        'Duct tape (5€)',
        'Swiss army knife (60€)',
      ],
    },
    {
      expression: 'MAP<product, position>(products, position + ": " + product.name + " (" + product.price + "€)")',
      context: {
        products: [
          { name: 'Duct tape', price: 5 },
          { name: 'Swiss army knife', price: 60 },
        ],
      },
      result: [
        '0: Duct tape (5€)',
        '1: Swiss army knife (60€)',
      ],
    },
  ],
};
