const { parseDateTime } = require('../../datetime');

module.exports = ([settlement, maturity, frequency, convention]) => {
  if (typeof settlement !== 'string' && typeof maturity !== 'string') {
    return null;
  }
  const startDate = parseDateTime(settlement);
  const endDate = parseDateTime(maturity);
  if (startDate >= endDate) {
    return null;
  }
  if (startDate.isValid() && endDate.isValid()) {
    const basis = convention || 'us_nasd';
    const valuesBasis = ['us_nasd', 'actual', 'actual_360', 'actual_365', 'european'];
    const valuesPeriod = [1, 2, 4];
    if (!valuesBasis.includes(basis) || !valuesPeriod.includes(frequency)) {
      return null;
    }
    if (typeof frequency === 'number' && Number.isFinite(frequency)) {
      const rDate = parseDateTime(maturity);
      rDate.set('year', startDate.get('year'));
      if (rDate < startDate) {
        rDate.add(1, 'year');
      }
      while (rDate > startDate) {
        rDate.add(-12 / frequency, 'month');
      }
      if (new Date(rDate.get('year'), rDate.get('month'), endDate.get('date')).getMonth() === rDate.get('month')) {
        rDate.set('date', endDate.get('date'));
      }
      return rDate.format();
    }
  }
  return null;
};
