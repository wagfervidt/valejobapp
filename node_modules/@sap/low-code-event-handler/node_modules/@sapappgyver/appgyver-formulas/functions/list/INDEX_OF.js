const execute = require('./INDEX_OF.runtime');

module.exports = {
  name: 'INDEX_OF',
  category: 'List',
  title: 'Get index of item in list',
  description: `Returns the first index at which a given item can be found in the source list.

If the given item cannot be found, \`null\` is returned instead.`,
  parameters: [{
    type: 'array',
    title: 'Values',
    description: 'List',
    items: {
      $id: '#item', // Make this a generic type
    },
  }, {
    $ref: '#item', // Refer to the generic type
    title: 'Item',
    description: 'Item to locate in the list',
  }],
  analyze: () => ({
    schema: { type: 'number' },
  }),
  execute,
  examples: [
    {
      context: {
        numbers: [1, 2, 3],
      },
      expression: 'INDEX_OF(numbers, 1)',
      result: 0,
    },
    {
      context: {
        numbers: [1, 2, 3],
      },
      expression: 'INDEX_OF(numbers, 2)',
      result: 1,
    },
    {
      context: {
        numbers: [1, 2, 3],
      },
      expression: 'INDEX_OF(numbers, null)',
      result: null,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, 0)',
      result: 1,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, "test")',
      result: 3,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, true)',
      result: 11,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, [])',
      result: 8,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, [1, 2, 3])',
      result: 6,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, {})',
      result: 9,
    },
    {
      context: {
        complexArray: [1, 0, 2, 'test', null, undefined, [1, 2, 3], { a: 10 }, [], {}, false, true],
      },
      expression: 'INDEX_OF(complexArray, { a: 10 })',
      result: 7,
    },
  ],
};
