const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];

module.exports = ([cost, salvage, life, period, month = 12]) => {
  if (cost == null || salvage == null || life == null || period == null) {
    return null;
  }

  const monthSaved = (month == null) ? 12 : month;

  if (typeof cost !== 'number'
      || !Number.isFinite(cost)
      || typeof salvage !== 'number'
      || !Number.isFinite(salvage)
      || typeof life !== 'number'
      || !Number.isFinite(life)
      || typeof period !== 'number'
      || !Number.isFinite(period)
      || typeof monthSaved !== 'number'
      || !Number.isFinite(monthSaved)
  ) {
    return null;
  }

  if (months.indexOf(monthSaved) === -1) {
    return null;
  }

  if (cost < 0 || salvage < 0 || life <= 0 || period <= 0) {
    return null;
  }

  if (period > life) {
    return null;
  }

  let balance;

  const rate = (1 - ((salvage / cost) ** (1 / life))).toFixed(3);

  const initial = cost * rate * month / 12;

  let total = initial;
  let current = 0;
  const ceiling = (period === life) ? life - 1 : period;
  for (let i = 2; i <= ceiling; i++) {
    current = (cost - total) * rate;
    total += current;
  }

  if (period === 1) {
    balance = initial;
  } if (period === life) {
    balance = (cost - total) * rate;
  } else {
    balance = current;
  }

  return Number.isFinite(balance) ? Number(balance.toFixed(2)) : null;
};
