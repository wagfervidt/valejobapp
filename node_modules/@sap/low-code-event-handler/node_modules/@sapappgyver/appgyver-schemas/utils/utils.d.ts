declare const fromPairs: <K extends string | number | symbol, V>(pairs: [K, V][]) => Record<K, V>;
declare const mapValues: <K extends string | number | symbol, V1, V2>(mapper: (value: V1, key: K) => V2, obj: Record<K, V1>) => Record<K, V2>;
declare const pick: <K extends string | number | symbol, V>(keys: K[], obj: Record<K, V>) => Record<K, V>;
declare const isEmpty: (value: Record<any, unknown> | Array<unknown>) => boolean;
export { mapValues, pick, fromPairs, isEmpty, };
