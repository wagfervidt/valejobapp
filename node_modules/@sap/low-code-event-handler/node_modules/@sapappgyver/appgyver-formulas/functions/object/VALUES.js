const { resolveObjectMemberAccessor } = require('@sapappgyver/appgyver-schemas');
const execute = require('./VALUES.runtime');

module.exports = {
  name: 'VALUES',
  category: 'Object',
  title: 'Get all values contained in object',
  description: 'Returns a list of values contained in the given object.',
  parameters: [{
    title: 'Object',
    description: 'Object to check',
    type: 'object',
    inversible: true,
  }],
  maxInversions: 1,
  analyze: ([objectParam], offset, parameterErrors) => {
    const itemSchema = (objectParam && objectParam.schema) || {};
    const accessorsSchema = (itemSchema && itemSchema.properties) || {};
    const { schema, errors } = Object.keys(accessorsSchema).length
      ? resolveObjectMemberAccessor(itemSchema, accessorsSchema, true)
      : {};
    const arraySchema = schema ? { type: 'array', items: schema } : { type: 'array' };
    const accessorsErrors = errors || [];
    return {
      schema: arraySchema,
      errors: parameterErrors.length
        ? [] : accessorsErrors.map(error => ({
          ...error, offset: objectParam.offset,
        })),
    };
  },
  execute,
  examples: [
    {
      expression: 'VALUES({ a: 1, b: "2" })',
      result: [1, '2'],
    },
    {
      expression: 'VALUES({})',
      result: [],
    },
  ],
};
