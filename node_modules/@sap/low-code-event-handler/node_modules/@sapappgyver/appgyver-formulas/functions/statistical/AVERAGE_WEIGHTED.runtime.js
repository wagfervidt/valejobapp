const averageWeighted = (values, weights) => {
  if (values.length !== weights.length) {
    return null;
  }
  const { length } = values;
  if (length === 0) {
    return null;
  }
  let probSum = 0;
  let weightSum = 0;
  for (let i = 0; i < length; i += 1) {
    probSum += (values[i] * weights[i]);
  }
  for (let i = 0; i < length; i += 1) {
    weightSum += weights[i];
  }
  return probSum / weightSum;
};

module.exports = ([values, weights]) => {
  if (!(Array.isArray(values) && Array.isArray(weights))) {
    return null;
  }
  const valuesValid = values.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const weightsValid = weights.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const result = averageWeighted(valuesValid, weightsValid);
  return Number.isFinite(result) ? result : null;
};
