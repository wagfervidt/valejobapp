const { parseDateTime } = require('../../datetime');
const COUPPCD = require('./COUPPCD.runtime');

const daysBetween = (startDate, endDate) => Math.ceil((endDate - startDate) / 1000 / 60 / 60 / 24);

module.exports = ([settlement, maturity, frequency, convention]) => {
  if (typeof settlement !== 'string' && typeof maturity !== 'string') {
    return null;
  }
  if (typeof frequency !== 'number' && !Number.isFinite(frequency)) {
    return null;
  }
  const startDate = parseDateTime(settlement);
  const endDate = parseDateTime(maturity);
  if (startDate >= endDate) {
    return null;
  }
  if (startDate.isValid() && endDate.isValid()) {
    const basis = convention || 'us_nasd';
    const valuesBasis = ['us_nasd', 'actual', 'actual_360', 'actual_365', 'european'];
    const valuesPeriod = [1, 2, 4];
    if (!valuesBasis.includes(basis) || !valuesPeriod.includes(frequency)) {
      return null;
    }
    if (basis === 'actual') {
      const aDate = COUPPCD([settlement, maturity, frequency, basis]);
      const aNextDate = parseDateTime(aDate);
      aNextDate.add(12 / frequency, 'month');
      return daysBetween(parseDateTime(aDate), aNextDate);
    }
    const yLength = basis === 'actual_365' ? 365 : 360;
    return yLength / frequency;
  }
  return null;
};
