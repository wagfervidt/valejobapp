const execute = require('./SCHEMA_OBJECT_PROPERTY.runtime');

module.exports = {
  name: 'SCHEMA_OBJECT_PROPERTY',
  category: 'Schema',
  title: 'Get object property schema',
  description: 'Returns a schema of a certain property name from the given schema representing an object.\n\n'
    + 'For example, if you have a schema representing an object with a property `name`, you can use this function to extract the schema of that property.\n\n'
    + 'Returns `null` if the parameter is not a schema representing an object, it doesn\'t have a property with the given name, or if the schema is otherwise unknown.',
  parameters: [{
    type: 'schema',
    title: 'Schema',
    description: 'Schema from which to get the type',
    schema: {
      type: 'object',
    },
  }, {
    type: 'string',
    title: 'Property',
    description: 'Name of the property whose schema to return',
  }],
  analyze: () => ({ schema: { type: 'schema' } }),
  execute,
  examples: [
    {
      context: {
        animalSchema: {
          type: 'object',
          properties: {
            name: { type: 'string' },
            weight: { type: 'number' },
          },
        },
      },
      expression: 'SCHEMA_OBJECT_PROPERTY(animalSchema, "name")',
      result: { type: 'string' },
    },
    {
      context: {
        animalSchema: {
          type: 'object',
          properties: {
            name: { type: 'string' },
            weight: { type: 'number' },
          },
        },
      },
      expression: 'SCHEMA_OBJECT_PROPERTY(animalSchema, "weight")',
      result: { type: 'number' },
    },
  ],
};
