/* eslint-disable no-plusplus */
const bytesToUuid = (buf, offset) => {
  const byteToHex = [];
  for (let i = 0; i < 256; ++i) {
    byteToHex[i] = (i + 0x100).toString(16).substr(1);
  }
  let i = offset || 0;
  const bth = byteToHex;
  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4
  return ([bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]], '-',
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]],
    bth[buf[i++]], bth[buf[i++]]]).join('');
};
const mathRNG = () => {
  const rnds = new Array(16);
  for (let i = 0, r; i < 16; i++) {
    // eslint-disable-next-line no-bitwise
    if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
    // eslint-disable-next-line no-bitwise
    rnds[i] = (r >>> ((i & 0x03) << 3)) & 0xff;
  }

  return rnds;
};

module.exports = () => {
  const rng = mathRNG();
  // eslint-disable-next-line no-bitwise
  rng[6] = (rng[6] & 0x0f) | 0x40;
  // eslint-disable-next-line no-bitwise
  rng[8] = (rng[8] & 0x3f) | 0x80;

  return bytesToUuid(rng);
};
