const execute = require('./KEYS.runtime');

module.exports = {
  name: 'KEYS',
  category: 'Object',
  title: 'Return object\'s keys',
  description: 'Returns a list containing the keys in the given object. Equivalent to JavaScript `Object.keys`.',
  parameters: [{
    title: 'Object',
    description: 'Object to eject keys',
    type: 'object',
  }],
  analyze: ([objParam]) => {
    const schema = {
      type: 'array',
      items: {
        type: 'string',
      },
    };
    const objSchema = objParam && objParam.schema;
    if (objSchema && objSchema.type === 'object' && objSchema.properties && !objSchema.additionalProperties) {
      const propNames = Object.keys(objSchema.properties);
      schema.items.enum = propNames;
      schema.items.examples = propNames;
      schema.enum = [propNames];
      schema.examples = schema.enum;
    }
    return { schema };
  },
  execute,
  examples: [
    { expression: 'KEYS({ id: 123, name: "John" })', result: ['id', 'name'] },
    { expression: 'KEYS({})', result: [] },
  ],
};
