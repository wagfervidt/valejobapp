const { resolveObjectMemberAccessor, getArrayItemSchema } = require('@sapappgyver/appgyver-schemas');
const execute = require('./SORT_BY_KEY_CASE_SENSITIVE.runtime');

module.exports = {
  name: 'SORT_BY_KEY_CASE_SENSITIVE',
  category: 'List',
  title: 'Case-sensitive sort a list of objects by a key',
  description: `Sorts an array of objects by the values of the given key.

This function performs a **case-sensitive** sort, meaning that all the upper case letters follow all the lower case letters.
This is for advanced use only, because typically you would like to perfrom a case insensitive sort, so unless you have
a reason to sort case-sensitively then you should use \`SORT_BY_KEY\` instead!

If the objects do not contain text or number values under the given key, the sort might not behave as expected.

The third parameter can be used to sort in ascending (default) or descending order.`,
  parameters: [{
    type: 'array',
    title: 'List',
    description: 'List to sort',
    inversible: true,
    items: {
      type: 'object',
    },
  }, {
    title: 'Key',
    description: 'Key whose value to sort by',
    type: 'string',
  }, {
    type: 'string',
    title: 'Order',
    default: 'asc',
    enum: ['asc', 'desc'],
    description: 'Order to sort in (`"asc"` for ascending, `"desc"` for descending); defaults to ascending.',
  }],
  maxInversions: 1,
  analyze: ([arrayParam, keyParam], offset, parameterErrors) => {
    const arraySchema = (arrayParam && arrayParam.schema) || { type: 'array' };
    const itemsSchema = getArrayItemSchema(arraySchema) || { type: 'object' };
    const keySchema = (keyParam && keyParam.schema) || {};
    const {
      errors: keyErrors,
    } = resolveObjectMemberAccessor(itemsSchema, keySchema);
    return {
      schema: arraySchema,
      errors: parameterErrors.length ? [] : keyErrors.map(error => ({
        ...error, offset: keyParam.offset,
      })),
    };
  },
  execute,
  examples: [
    {
      expression: 'SORT_BY_KEY_CASE_SENSITIVE(array, "name")',
      context: {
        array: [
          { name: 'Ken', year: 2010 },
          { name: 'jane', year: 1987 },
          { name: 'karen', year: 1980 },
          { name: 'John', year: 2005 },
        ],
      },
      result: [
        { name: 'John', year: 2005 },
        { name: 'Ken', year: 2010 },
        { name: 'jane', year: 1987 },
        { name: 'karen', year: 1980 },
      ],
    },
    {
      expression: 'SORT_BY_KEY_CASE_SENSITIVE(array, "name", "desc")',
      context: {
        array: [
          { name: 'Ken', year: 2010 },
          { name: 'jane', year: 1987 },
          { name: 'karen', year: 1980 },
          { name: 'John', year: 2005 },
        ],
      },
      result: [
        { name: 'karen', year: 1980 },
        { name: 'jane', year: 1987 },
        { name: 'Ken', year: 2010 },
        { name: 'John', year: 2005 },
      ],
    },
    {
      expression: 'SORT_BY_KEY_CASE_SENSITIVE(array, "year", "asc")',
      context: {
        array: [
          { name: 'Ken', year: 2010 },
          { name: 'jane', year: 1987 },
          { name: 'karen', year: 1980 },
          { name: 'John', year: 2005 },
        ],
      },
      result: [
        { name: 'karen', year: 1980 },
        { name: 'jane', year: 1987 },
        { name: 'John', year: 2005 },
        { name: 'Ken', year: 2010 },
      ],
    },
  ],
};
