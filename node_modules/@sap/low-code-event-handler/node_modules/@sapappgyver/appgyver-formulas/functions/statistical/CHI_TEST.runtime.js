const chiDist = require('./CHISQ_RT_DIST.runtime');

const chiTest = (observed, expected) => {
  if (observed.length !== expected.length) {
    return null;
  }
  const { length } = observed;
  if (length <= 0) {
    return null;
  }
  let result = 0; for (let i = 0; i < length; i++) {
    result += ((observed[i] - expected[i]) ** 2) / expected[i];
  }
  return result;
};

module.exports = ([observed, expected]) => {
  if (!(Array.isArray(observed) && Array.isArray(expected))) {
    return null;
  }
  const observedValid = observed.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const expectedValid = expected.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const degrees = observedValid.length - 1;
  const chiTestResult = chiTest(observedValid, expectedValid);

  const result = (Number.isFinite(chiTestResult))
    ? chiDist([chiTestResult, degrees, true])
    : null;
  return Number.isFinite(result) ? result : null;
};
