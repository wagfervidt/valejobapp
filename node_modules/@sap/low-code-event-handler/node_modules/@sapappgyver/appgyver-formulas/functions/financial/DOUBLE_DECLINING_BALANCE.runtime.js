module.exports = ([cost, salvage, life, period, factor = 2]) => {
  if (cost == null || salvage == null || life == null || period == null) {
    return null;
  }

  if (typeof cost !== 'number'
      || !Number.isFinite(cost)
      || typeof salvage !== 'number'
      || !Number.isFinite(salvage)
      || typeof life !== 'number'
      || !Number.isFinite(life)
      || typeof period !== 'number'
      || !Number.isFinite(period)
      || typeof factor !== 'number'
      || !Number.isFinite(factor)
  ) {
    return null;
  }

  if (cost < 0 || salvage < 0 || life <= 0 || period <= 0 || factor <= 0) {
    return null;
  }

  if (period > life) {
    return null;
  }

  let total = 0;
  let current = 0;
  for (let i = 1; i <= period; i++) {
    current = Math.min((cost - total) * (factor / life), (cost - salvage - total));
    total += current;
  }

  return Number.isFinite(current) ? Number(current.toFixed(2)) : null;
};
