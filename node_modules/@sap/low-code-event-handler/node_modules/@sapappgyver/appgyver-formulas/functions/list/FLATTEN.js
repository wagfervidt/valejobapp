const { getArrayItemSchema } = require('@sapappgyver/appgyver-schemas');
const execute = require('./FLATTEN.runtime');


module.exports = {
  name: 'FLATTEN',
  category: 'List',
  title: 'Flatten a list of lists',
  description: 'Takes a list of lists and returns a list with all the items from each of the original sub-lists.',
  parameters: [{
    type: 'array',
    title: 'Lists',
    description: 'List of lists to flatten',
    items: {
      type: 'array',
    },
  }],
  analyze: ([arrayParam]) => {
    const schema = { type: 'array' };
    const includeItemsSchema = arrayParam && getArrayItemSchema(arrayParam.schema);
    const itemSchema = getArrayItemSchema(includeItemsSchema);
    if (itemSchema) {
      schema.items = itemSchema;
    }
    return { schema };
  },
  execute,
  examples: [
    {
      context: {
        numbersArr: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
      },
      expression: 'FLATTEN(numbersArr)',
      result: [1, 2, 3, 4, 5, 6, 7, 8, 9],
    },
    {
      context: {
        stringsArr: [['Jack', 'Max', 'Rick'], ['Kate', 'Jane']],
      },
      expression: 'FLATTEN(stringsArr)',
      result: ['Jack', 'Max', 'Rick', 'Kate', 'Jane'],
    },
    {
      context: {
        objArr: [[{ name: 'Jack', age: 30 }, { name: 'Rick', age: 35 }], [{ name: 'Kate', age: 30 }, { name: 'Jane', age: 32 }]],
      },
      expression: 'FLATTEN(objArr)',
      result: [{ name: 'Jack', age: 30 }, { name: 'Rick', age: 35 }, { name: 'Kate', age: 30 }, { name: 'Jane', age: 32 }],
    },
  ],
};
