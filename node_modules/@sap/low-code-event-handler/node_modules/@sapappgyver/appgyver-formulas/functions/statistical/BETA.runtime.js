const gamma = require('./GAMMA.runtime');
const gammaLn = require('./GAMMALN.runtime');

const betaLn = (x, y) => gammaLn([x]) + gammaLn([y]) - gammaLn([x + y]);

const beta = (x, y) => {
  if (x <= 0 || y <= 0) {
    return null;
  }
  // make sure x + y doesn't exceed the upper limit of usable values
  return (x + y > 170)
    ? Math.exp(betaLn(x, y))
    : gamma([x]) * gamma([y]) / gamma([x + y]);
};

module.exports = ([x, y]) => {
  if (!(typeof x === 'number'
      && Number.isFinite(x)
      && typeof y === 'number'
      && Number.isFinite(y))
  ) {
    return null;
  }
  const result = beta(x, y);
  return Number.isFinite(result) ? result : null;
};
