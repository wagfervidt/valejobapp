const skewness = (arr) => {
  const len = arr.length;
  let delta = 0;
  let deltaN = 0;
  let term1 = 0;
  let N = 0;
  let mean = 0;
  let M2 = 0;
  let M3 = 0;

  for (let i = 0; i < len; i += 1) {
    N += 1;

    delta = arr[i] - mean;
    deltaN = delta / N;

    term1 = delta * deltaN * (N - 1);

    M3 += term1 * deltaN * (N - 2) - 3 * deltaN * M2;
    M2 += term1;
    mean += deltaN;
  }
  // Calculate the population skewness:
  return Math.sqrt(N) * M3 / (M2 ** (3 / 2));
};

module.exports = ([array]) => {
  if (!Array.isArray(array)) {
    return null;
  }
  const validArray = array.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  if (validArray.length) {
    const result = skewness(validArray);
    return Number.isFinite(result) ? result : null;
  }
  return null;
};
