const { getArrayItemSchema } = require('@sapappgyver/appgyver-schemas');
const execute = require('./MERGE.runtime');

module.exports = {
  name: 'MERGE',
  category: 'Object',
  title: 'Get a property of each object in a list',
  description: 'Given a list of objects, returns a single object that contains all unique key/value pairs from the source objects. If there are several objects that have the same key, the value will be taken from the last object in the list.',
  parameters: [{
    type: 'array',
    title: 'Objects',
    description: 'List of objects whose properties will be get',
    items: {
      type: 'object',
    },
  }],
  analyze: ([arrayParam]) => {
    const itemSchema = getArrayItemSchema(arrayParam && arrayParam.schema) || { type: 'object' };
    const anyOfSchema = itemSchema.anyOf || [];
    const properties = anyOfSchema.length
      && anyOfSchema.reduce((combined, item) => {
        const { type, properties: objProps } = item;
        if (type === 'object' && typeof objProps === 'object') {
          return { ...combined, ...objProps };
        }
        return combined;
      }, {});
    const objSchema = properties ? { type: 'object', properties } : itemSchema;
    return {
      schema: objSchema,
    };
  },
  execute,
  examples: [
    {
      context: {
        dog: { name: 'dog', weight: 123, a: 1 },
        cat: { name: 'cat', weight: 48, b: 2 },
        rat: { name: 'rat', weight: 10, c: 3 },
      },
      expression: 'MERGE([dog, cat, rat])',
      result: {
        a: 1, b: 2, c: 3, name: 'rat', weight: 10,
      },
    },
    {
      expression: 'MERGE([])',
      result: {},
    },
  ],
};
