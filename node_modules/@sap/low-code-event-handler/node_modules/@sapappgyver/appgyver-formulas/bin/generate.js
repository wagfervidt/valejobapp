#!/usr/bin/env node
/* eslint-disable no-console */
/**
 * Parses and evaluates the given expression (1st parameter),
 * optionally using the given context object (2nd parameter).
 */
const path = require('path');
const { generateFormula } = require('../generator');

function main(cmd, complexityStr, errorCountStr, ...extra) {
  if (complexityStr == null || extra.length) {
    console.error(`Usage: ${cmd} <COMPLEXITY> [<ERROR_COUNT>]`);
    process.exit(1);
  } else {
    const complexity = parseInt(complexityStr, 10);
    const errorCount = errorCountStr ? parseInt(errorCountStr, 10) : 0;
    if (!Number.isFinite(complexity)) {
      console.error(`Invalid complexity "${complexityStr}", expected an integer`);
      process.exit(1);
    }
    if (!Number.isFinite(errorCount)) {
      console.error(`Invalid error count "${errorCountStr}", expected an integer`);
      process.exit(1);
    }
    console.log(generateFormula(complexity, errorCount));
  }
}

main(`./${path.relative(process.cwd(), __filename)}`, ...process.argv.slice(2));
