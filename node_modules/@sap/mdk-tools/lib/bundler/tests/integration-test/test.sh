#! /bin/bash
scriptDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$scriptDir"
# Define some helper functions
function failTest {
  echo "test failed: $currentTest"
  clean
  exit 1
}
function clean {
  git clean -dfq "$scriptDir"
}
function bundler {
  node "$scriptDir"/../../bundler-cli.js $@ &>/dev/null
}
currentTest=""
function testing {
  currentTest="$@"
  # beforeEach
  clean
}
function exists {
  test -e $1 || failTest
}
function doesNotExist {
  test -e $1 && failTest
}
function verifyUploadBundle {
  test -e uploadBundle.zip || failTest
  unzip -q uploadBundle.zip -d uploadBundle
  if [ "$1" == "--project-json-only" ]; then
    exists uploadBundle/.project.json
    doesNotExist uploadBundle/.che
  elif [ "$1" == "--che-only" ]; then
    exists uploadBundle/.che
    exists uploadBundle/.che/project.json
    doesNotExist uploadBundle/.project.json
  else
    exists uploadBundle/.che
    exists uploadBundle/.che/project.json
    exists uploadBundle/.project.json
  fi
}

echo "running application-bundler integration tests"

testing "Can use custom settings file"
bundler --settings-file test-settings.json || failTest
test -e targetDir/subDir/bundle.js || failTest
rm targetDir/subDir/bundle.js

testing "Can use default settings file"
cp test-settings.json settings.json
bundler || failTest
exists targetDir/subDir/bundle.js

testing "Fails if default settings file not present"
bundler && failTest
doesNotExist targetDir/subDir/bundle.js

testing "Fails if both create-bundle and nativescript-project are missing"
bundler --editor-export TestApp.zip --application-name AppName && failTest
doesNotExist targetDir/subDir/bundle.js

testing "Succeeds with create-bundle and editor-export"
bundler --editor-export TestApp.zip --application-name AppName --create-bundle || failTest
verifyUploadBundle

testing "Succeeds with create-bundle and seam-project"
unzip -q TestApp.zip -d TestApp
bundler --seam-project TestApp --application-name AppName --create-bundle || failTest
verifyUploadBundle

testing "Fails if create-bundle and seam-project are both missing"
unzip -q TestApp.zip -d TestApp
bundler --application-name AppName --create-bundle && failTest
doesNotExist uploadBundle.zip

testing "Succeeds with create-bundle if .che directory is found but .project.json is missing"
unzip -q TestApp.zip -d TestApp
rm TestApp/.project.json
bundler --seam-project TestApp --application-name AppName --create-bundle || failTest
verifyUploadBundle --che-only

testing "Succeeds with create-bundle if .che directory is missing but .project.json file is found"
unzip -q TestApp.zip -d TestApp
rm -r TestApp/.che
bundler --seam-project TestApp --application-name AppName --create-bundle || failTest
verifyUploadBundle --project-json-only

testing "Fails with create-bundle if .che directory and .project.json file are both missing"
unzip -q TestApp.zip -d TestApp
rm -r TestApp/.che
rm TestApp/.project.json
bundler --seam-project TestApp --application-name AppName --create-bundle && failTest
doesNotExist uploadBundle.zip

testing "Succeeds with nativescript-project"
unzip -q TestApp.zip -d TestApp
bundler --seam-project TestApp --application-name AppName --nativescript-project targetDir/subDir || failTest
exists targetDir/subDir/bundle.js
# Verify that bundle.js has application_app definition and mdkbundlerversion
grep application_app targetDir/subDir/bundle.js &>/dev/null || failTest
grep version_mdkbundlerversion targetDir/subDir/bundle.js &>/dev/null || failTest

testing "create-bundle causes nativescript-project to be ignored"
bundler --editor-export TestApp.zip --application-name AppName --create-bundle --nativescript-project targetDir/subDir || failTest
verifyUploadBundle
doesNotExist targetDir/subDir/bundle.js

testing "seam-project causes failure if directory is missing"
bundler --seam-project ThisWillFailIfUsed --application-name AppName --create-bundle --nativescript-project targetDir/subDir && failTest
doesNotExist uploadBundle.zip

testing "editor-export causes seam-project to be ignored"
bundler --editor-export TestApp.zip --seam-project ThisWillFailIfUsed --application-name AppName --create-bundle --nativescript-project targetDir/subDir || failTest
verifyUploadBundle

clean
echo "application-bundler integration tests succeeded"
