const execute = require('./DATETIME_IS_BETWEEN.runtime');

module.exports = {
  name: 'DATETIME_IS_BETWEEN',
  category: 'Date',
  title: 'Check if a datetime is between two other datetimes',
  description: `Returns \`true\` if a datetime is between the given other two datetimes, and \`false\` otherwise.

By default, returns \`false\` if the datetime is exactly same as either of the boundary datetimes. This behavior can be modified by providing the optional **Borders type** parameter.`,
  parameters: [{
    type: 'string',
    format: 'date-time',
    title: 'Date',
    description: 'Date to check',
  }, {
    type: 'string',
    format: 'date-time',
    title: 'Date border 1',
    description: 'The 1st date border',
  }, {
    type: 'string',
    format: 'date-time',
    title: 'Date border 2',
    description: 'The 2nd date border',
  }, {
    type: 'string',
    title: 'Precision',
    default: null,
    enum: ['year', 'month', 'week', 'isoWeek', 'day', 'hour', 'minute', 'second', null],
    description: 'Precision for comparing ("year","month","week","isoWeek","day","hour","minute","second")',
  }, {
    type: 'string',
    title: 'Borders type',
    default: '()',
    enum: ['()', '(]', '[)', '[]'],
    description: 'Type of border inclusion ("()", "(]", "[)", "[]")',
  }],
  analyze: () => ({ schema: { type: 'boolean' } }),
  execute,
  examples: [
    { expression: 'DATETIME_IS_BETWEEN("2019-06-20T12:13:14Z", "2019-06-19T12:13:14Z", "2019-06-21T12:13:14Z")', result: true },
    { expression: 'DATETIME_IS_BETWEEN("2019-06-20T12:13:14Z", "2019-06-19T12:13:14Z", "2021-06-21T12:13:14Z", "year")', result: false },
    { expression: 'DATETIME_IS_BETWEEN("2019-06-20T12:13:14Z", "2019-06-20T12:13:14Z", "2019-06-21T12:13:14Z", null , "[]")', result: true },
  ],
};
