const _ = require('lodash');

exports.SectionButtonStyle = function(obj, key, output) {
    /*
    SectionButton
    Style migration:
    {
        "Style": "ButtonStyle"
    }
        => 
    {
        "Styles": {
            "Button": "ButtonStyle"
        }
    }
    */
    if (obj && !_.isNil(obj[key])) {
        if (obj["Styles"] && obj["Styles"]["Button"]) {
            return;
        }
        obj.Styles = _.extend(obj.Styles, {
            "Button": obj[key]
        });
        delete obj[key];
        if (output) {
            output.push(`key "${key}" --> key "Styles.Button"`);
        }
    }
};

exports.DataTableColumnItemImage = function(obj, key, output) {
    /*
    DataTableColumnItem
    Image migration:
    {
        "Image": "res://mdk_logo.png",
        "Style": "image-style"
    }
        => 
    {
        "Value": "res://mdk_logo.png",
        "DisplayStyle": "Image",
        "Styles": {
            "Image": "image-style"
        }
    }
    */
    if (obj && !_.isNil(obj[key])) {
        if (obj["Value"]) {
            return;
        }
        obj.Value = obj[key];
        obj.DisplayStyle = "Image";
        delete obj[key];
        if (output) {
            output.push(`key "${key}" --> key "Value"`);
            output.push('add "DisplayStyle": "Image"');
        }

        if (obj.Style && (!obj["Styles"] || !obj["Styles"]["Image"])) {
            obj.Styles = _.extend(obj.Styles, {
                "Image": obj.Style
            });
            if (output) {
                output.push('key "Style" --> key "Styles.Image"');
            }
        }
    }
};

exports.DataTableColumnItemText = function(obj, key, output) {
    /*
    DataTableColumnItem
    Text migration:
    {
        "Text": "Category",
        "Style": "text-style"
    }
        => 
    {
        "Value": "Category",
        "DisplayStyle": "Text",
        "Styles": {
            "Text": "text-style"
        }
    }
    */
    if (obj && !_.isNil(obj[key])) {
        if (obj["Value"]) {
            return;
        }
        obj.Value = obj[key];
        obj.DisplayStyle = "Text";
        delete obj[key];
        if (output) {
            output.push(`key "${key}" --> key "Value"`);
            output.push('add "DisplayStyle": "Text"');
        }

        if (obj.Style && (!obj["Styles"] || !obj["Styles"]["Text"])) {
            obj.Styles = _.extend(obj.Styles, {
                "Text": obj.Style
            });
            if (output) {
                output.push('key "Style" --> key "Styles.Text"');
            }
        }
    }
};

exports.ObjectCellDetailImage = function(obj, key, output) {
    /*
    ObjectCell
    DetailImage migration:
    {
        "DetailImage": "res://mdk_logo.png"
    }
        =>
    {
        "AvatarStack": {
            "Avatars": [
                {
                    "Image": "res://mdk_logo.png"
                }
            ]
        }
    }
    */
    if (obj && !_.isNil(obj[key])) {
        if (_.isNil(obj["AvatarStack"])) {
            obj["AvatarStack"] = {
                "Avatars": [{"Image": obj[key]}]
            };
        } else {
            if (_.isNil(obj["AvatarStack"]["Avatars"])) {
                obj["AvatarStack"]["Avatars"] = [{"Image": obj[key]}];
            } else if (Array.isArray(obj["AvatarStack"]["Avatars"])) {
                if (obj["AvatarStack"]["Avatars"].length === 0) {
                    obj["AvatarStack"]["Avatars"] = [{"Image": obj[key]}];
                } else if (!obj["AvatarStack"]["Avatars"][0]["Image"]) {
                    obj["AvatarStack"]["Avatars"][0] = _.extend(obj["AvatarStack"]["Avatars"][0], {
                        "Image": obj[key]
                    });
                }
            }
        }
        delete obj[key];
        if (output) {
            output.push(`key "${key}" --> key "AvatarStack.Avatars[0].Image"`);
        }
    }
};

exports.ObjectCellDetailImageText = function(obj, key, output) {
    /*
    ObjectCell
    DetailImageText migration:
    {
        "DetailImageText": "Detail Image Text"
    }
        =>
    {
        "AvatarStack": {
            "Avatars": [
                {
                    "ImageText": "Detail Image Text"
                }
            ]
        }
    }
    */
    if (obj && !_.isNil(obj[key])) {
        if (_.isNil(obj["AvatarStack"])) {
            obj["AvatarStack"] = {
                "Avatars": [{"ImageText": obj[key]}]
            };
        } else {
            if (_.isNil(obj["AvatarStack"]["Avatars"])) {
                obj["AvatarStack"]["Avatars"] = [{"ImageText": obj[key]}];
            } else if (Array.isArray(obj["AvatarStack"]["Avatars"])) {
                if (obj["AvatarStack"]["Avatars"].length === 0) {
                    obj["AvatarStack"]["Avatars"] = [{"ImageText": obj[key]}];
                } else if (!obj["AvatarStack"]["Avatars"][0]["ImageText"]) {
                    obj["AvatarStack"]["Avatars"][0] = _.extend(obj["AvatarStack"]["Avatars"][0], {
                        "ImageText": obj[key]
                    });
                }
            }
        }
        delete obj[key];
        if (output) {
            output.push(`key "${key}" --> key "AvatarStack.Avatars[0].ImageText"`);
        }
    }
};

exports.ObjectCellDetailImageIsCircular = function(obj, key, output) {
    /*
    ObjectCell
    DetailImageIsCircular migration:
    {
        "DetailImageIsCircular": false
    }
        =>
    {
        "AvatarStack": {
            "ImageIsCircular": false
        }
    }
    */
    if (obj && !_.isNil(obj[key])) {
        if (obj["AvatarStack"] && !_.isNil(obj["AvatarStack"]["ImageIsCircular"])) {
            return;
        }
        if (obj["AvatarStack"]) {
            obj["AvatarStack"]["ImageIsCircular"] = obj[key];
        } else {
            obj["AvatarStack"] = {
                "ImageIsCircular": obj[key]
            };
        }
        delete obj[key];
        if (output) {
            output.push(`key "${key}" --> key "AvatarStack.ImageIsCircular"`);
        }
    }
},

exports.ObjectHeaderTags = function(obj, key, output) {
    /*
    ObjectHeader
    Tags migration:
    {
        "Tags": [
            "Started", 
            "PM01", 
            "103-Repair", 
            "The Fourth one"
        ]
    }
        => 
    {
        "Tags": [
            {"Text": "Tag1"},
            {"Text": "Tag2"},
            {"Text": "Tag3"},
            {"Text": "Tag4"}
        ]
    }
    */
    var isUpdated = false;
    if (obj && !_.isNil(obj[key])) {
        if (Array.isArray(obj["Tags"]) && obj["Tags"].length > 0) {
            var items = [];
            obj["Tags"].forEach(item => {
                if (typeof item === "string") {
                    items.push({"Text": item});
                    isUpdated = true;
                } else {
                    items.push(item);
                }
            });
            if (isUpdated) {
                if (output) {
                    output.push(`value {"${key}": "${obj["Tags"]}"} --> value {"${key}": "${items}"}`);
                }
                obj["Tags"] = items;
            }            
        }
    }
};

exports.FormCellPage = function(obj, key, output) {
    /*
    FormCell Page migration:
    {
        "Controls": [
            {
                "_Type": "Control.Type.FormCellContainer",
                "_Name": "FormCellContainer0",
                "Sections": [
                    {
                        "Controls": [
                            {
                                "_Type": "Control.Type.FormCell.Note",
                                "_Name": "FormCellNote0",
                                "IsEditable": true,
                                "IsVisible": true,
                                "PlaceHolder": "PlaceHolder",
                                "Enabled": true
                            }
                        ],
                        "Visible": true,
                        "Caption": "Section0"
                    },
                    {
                        "Controls": [
                            {
                                "_Type": "Control.Type.FormCell.Note",
                                "_Name": "FormCellNote1",
                                "IsEditable": true,
                                "IsVisible": true,
                                "PlaceHolder": "PlaceHolder",
                                "Enabled": true
                            }
                        ],
                        "Visible": true,
                        "Caption": "Section1"
                    }
                ]
            }
        ],
        "_Type": "Page",
        "_Name": "FormCellPage",
        "Caption": "FormCellPage"
    }
        => 
    {
        "Controls": [
            {
                "_Type": "Control.Type.SectionedTable",
                "_Name": "FormCellContainer0",
                "Sections": [
                    {
                        "Controls": [
                            {
                                "_Type": "Control.Type.FormCell.Note",
                                "_Name": "FormCellNote0",
                                "IsEditable": true,
                                "IsVisible": true,
                                "PlaceHolder": "PlaceHolder",
                                "Enabled": true
                            }
                        ],
                        "Visible": true,
                        "_Type": "Section.Type.FormCell",
                        "_Name": "SectionFormCell0"
                    },
                    {
                        "Controls": [
                            {
                                "_Type": "Control.Type.FormCell.Note",
                                "_Name": "FormCellNote1",
                                "IsEditable": true,
                                "IsVisible": true,
                                "PlaceHolder": "PlaceHolder",
                                "Enabled": true
                            }
                        ],
                        "Visible": true,
                        "_Type": "Section.Type.FormCell",
                        "_Name": "SectionFormCell1"
                    }
                ]
            }
        ],
        "_Type": "Page",
        "_Name": "FormCellPage",
        "Caption": "FormCellPage"
    }
    */
    if (obj) {
        obj[key] = "Control.Type.SectionedTable";
        if (output) {
            output.push('"Control.Type.FormCellContainer" --> "Control.Type.SectionedTable"');
        }
        if (obj.Sections) {
            if (Array.isArray(obj.Sections)) {
                obj.Sections.forEach((item, index) => {
                    item._Type = "Section.Type.FormCell";
                    item._Name = (obj._Name || "") + "SectionFormCell" + index;
                    delete item.Caption;
                });
            }
        }
    }
};