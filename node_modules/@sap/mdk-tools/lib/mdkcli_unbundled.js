#!/usr/bin/env node
"use strict";
const yargs = require("yargs");
const logger = require("./logger");
async function cli() {
    // mdk migrate-script -v -l -s -o
    if (process.argv && process.argv.find(a => a === "migrate-script")) {
        // process.argv = process.argv.filter(a => a.indexOf("mdkcli.js") < 0);
        process.argv.splice(1, 1);
        const {MetadataMigrate} = require("./migrator/script-migrator/migrate-script.js");
        const c = new MetadataMigrate();
        c.run();
        return;
    }
    yargs.
        scriptName("mdk").
        usage('$0 <cmd> [path] [types..]').
        command("bundle [path]", "Bundle project", {}, async (argv) => {
            const bundle = require("../lib/bundler/bundler-cli.js");
            bundle.doBuild()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });
        }).
        command("build [--target] [--project]", "Build project to web module", {}, async (argv) => {
            const builder = require("../lib/builder/build-cli.js");
            builder.doBuild()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });

        }).
        command("migrate [--project]", "Migrate project to the specific schema version.", {}, async (argv) => {
            const migrator = require("../lib/migrator/migrator-cli.js");
            migrator.doMigrate()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });

        }).
        /*
        command("validate [--seam-project]", "Validate project", {}, async (argv) => {
            const validator = require("./validator/validator-cli.js");
            validator.doValidate()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });
        }).
        */
        command("deploy [--target] [--project]", "Deploy project", {}, async (argv) => {
            const deployer = require("./deployer/deploy-cli.js");
            deployer.deploy()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });
        }).
        command("validate-mergemap [--baseProject] [--extProject]", false, {}, async (argv) => {
            const validator = require("./validator/mergemap-validator-cli.js");
            validator.doValidate()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });
        }).
        command("amend [--target] [--path] [--servicePath]", "Amend project", {}, async (argv) => {
            const amender = require("./amender/amend-cli.js");
            amender.amend()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });
        }).
        command("check [--target] [--project]", "Check project", {}, async (argv) => {
            const checker = require("./checker/check-cli.js");
            checker.check()
                .catch((err) => {
                    console.error(logger.getError(err));
                    process.exit(-1);
                });
        }).
        help().
        alias('h', 'help').
        argv;
}
exports.cli = cli;
cli();