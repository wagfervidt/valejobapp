module.exports = (inv) => {
  const { params: [a, b], result, invertIndexes: [invertIndex] } = inv;
  const type = typeof result;
  const constant = invertIndex === 0 ? b : a;
  if (type === 'number') {
    if (typeof constant !== 'number') {
      throw new Error('Cannot invert difference using a non-number value');
    }
    if (Number.isNaN(result)) {
      throw new Error('Cannot invert difference with NaN value');
    }
    if (invertIndex === 0) {
      if (b === 0) {
        throw new Error('Cannot invert division by zero');
      }
      return inv.invertTo(b * result);
    }
    return inv.invertTo(a / result);
  }
  throw new Error(`Cannot invert value of type ${type}`);
};
