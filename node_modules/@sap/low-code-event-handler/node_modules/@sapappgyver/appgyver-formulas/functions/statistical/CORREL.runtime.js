const average = require('./AVERAGE.runtime');

const correl = (arr1, arr2) => {
  if (arr1.length !== arr2.length) {
    return null;
  }
  const { length } = arr1;
  if (length === 0) {
    return null;
  }
  const arrCorr1 = arr1.slice(0, length);
  const arrCorr2 = arr2.slice(0, length);
  const meanX = average([arrCorr1]);
  const meanY = average([arrCorr2]);
  let covariance = 0;
  for (let i = 0; i < length; i += 1) {
    covariance += (arrCorr1[i] - meanX) * (arrCorr2[i] - meanY);
  }
  const variant1 = arrCorr1.reduce((total, item) => total + ((item - meanX) ** 2), 0);
  const variant2 = arrCorr2.reduce((total, item) => total + ((item - meanY) ** 2), 0);
  const divider = Math.sqrt(variant1 * variant2);
  return covariance / divider;
};

module.exports = ([array1, array2]) => {
  if (!(Array.isArray(array1) && Array.isArray(array2))) {
    return null;
  }
  const array1Valid = array1.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const array2Valid = array2.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const result = correl(array1Valid, array2Valid);
  return Number.isFinite(result) ? result : null;
};
