"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Log = void 0;
var chalk_1 = __importDefault(require("chalk"));
var options_1 = require("./options");
var strip_ansi_1 = __importDefault(require("strip-ansi"));
/* ********************************************************************************************************************
 * Logger
 * ********************************************************************************************************************/
/**
 * Output log message
 */
function Log(msg, logLevel) {
    if (logLevel === void 0) { logLevel = Log.normal; }
    if (logLevel > options_1.appOptions.logLevel)
        return;
    var color = options_1.appOptions.color, instanceIsCLI = options_1.appOptions.instanceIsCLI;
    /* Handle Icon */
    var printIcon = function (icon) { return chalk_1.default.bold.cyanBright("[" + icon + "] "); };
    var icon = '';
    if (Array.isArray(msg)) {
        icon = msg[0];
        msg = (icon === '!') ? printIcon(chalk_1.default.bold.yellow(icon)) + chalk_1.default.yellow(msg[1]) :
            (icon === '~') ? printIcon(chalk_1.default.bold.cyanBright(icon)) + msg[1] :
                (icon === '=') ? printIcon(chalk_1.default.bold.greenBright(icon)) + msg[1] :
                    (icon === '+') ? printIcon(chalk_1.default.bold.green(icon)) + msg[1] :
                        (icon === '-') ? printIcon(chalk_1.default.bold.white(icon)) + msg[1] :
                            msg[1];
    }
    var isError = (icon === '!');
    /* Print message */
    msg = !color ? strip_ansi_1.default(msg) : msg;
    if (!instanceIsCLI)
        console.log(msg);
    else if (isError)
        process.stderr.write(msg + '\r\n');
    else
        process.stdout.write(msg + '\r\n');
}
exports.Log = Log;
/** Log Levels **/
(function (Log) {
    Log.system = 0;
    Log.normal = 1;
    Log.verbose = 2;
})(Log = exports.Log || (exports.Log = {}));
//# sourceMappingURL=logger.js.map