const percentileExc = (arr, perc) => {
  if (arr.length < 2) {
    return null;
  }

  const sortedArr = [...arr].sort((a, b) => {
    if (a > b) return 1;
    if (a < b) return -1;
    return 0;
  });
  const { length } = sortedArr;

  if (perc < 1 / (length + 1) || perc > 1 - 1 / (length + 1)) {
    return null;
  }
  const l = perc * (length + 1) - 1;
  const fl = Math.floor(l);
  return (l === fl)
    ? sortedArr[l]
    : sortedArr[fl] + (l - fl) * (sortedArr[fl + 1] - sortedArr[fl]);
};

module.exports = ([array, percent]) => {
  if (!Array.isArray(array)) {
    return null;
  }
  if (!(typeof percent === 'number' && Number.isFinite(percent))) {
    return null;
  }
  if (percent >= 1 || percent <= 0) {
    return null;
  }
  const validArray = array.filter(item => (typeof item === 'number' && Number.isFinite(item)));
  const result = percentileExc(validArray, percent);
  return Number.isFinite(result) ? result : null;
};
