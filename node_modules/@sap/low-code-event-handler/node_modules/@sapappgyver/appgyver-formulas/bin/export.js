#!/usr/bin/env node
/* eslint-disable no-console */
/**
 * Parses the given formula (1st parameter)
 * and outputs the JSON representation of its exported format.
 * To pretty-print, provide --pretty
 */
const path = require('path');
const { parseExpression } = require('../parser');

function popFlagArgument(args, flag) {
  const index = args.indexOf(flag);
  if (index >= 0) {
    args.splice(index, 1);
  }
  return index >= 0;
}

function main(cmd, ...args) {
  const pretty = popFlagArgument(args, '--pretty');
  const [formula, ...extra] = args;
  if (formula == null || extra.length) {
    console.error(`Usage: ${cmd} <FORMULA> [--pretty]`);
    process.exit(1);
  } else {
    const parsedExpression = parseExpression(formula);
    const { syntaxErrors } = parsedExpression;
    if (syntaxErrors.length) {
      syntaxErrors.forEach(({ offset, message }) => {
        console.error(`Syntax error at ${offset}: ${message}`);
      });
    }
    try {
      const exported = parsedExpression.export();
      console.log(JSON.stringify(exported, null, pretty ? 2 : undefined));
    } catch (error) {
      // Ignore
    }
    if (syntaxErrors.length) {
      process.exit(2);
    }
  }
}

main(`./${path.relative(process.cwd(), __filename)}`, ...process.argv.slice(2));
