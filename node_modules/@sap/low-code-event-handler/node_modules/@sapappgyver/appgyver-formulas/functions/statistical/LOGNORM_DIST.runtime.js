const erf = require('./ERF.runtime');

function logNormalDist(x, mu, sigma) {
  if (x <= 0) {
    return 0;
  }
  return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI)
    - Math.log(sigma) - ((Math.log(x) - mu) ** 2)
    / (2 * sigma * sigma));
}

function cumulativeLogNormalDist(x, mu, sigma) {
  if (x < 0) {
    return 0;
  }
  const erfRes = erf([(Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)]);
  return 0.5 + (0.5 * erfRes);
}

module.exports = ([x, mean, std, cumulative]) => {
  if (
    typeof x === 'number'
      && Number.isFinite(x)
      && typeof mean === 'number'
      && Number.isFinite(mean)
      && typeof std === 'number'
      && Number.isFinite(std)
  ) {
    const result = cumulative
      ? cumulativeLogNormalDist(x, mean, std)
      : logNormalDist(x, mean, std);
    return Number.isFinite(result) ? result : null;
  }
  return null;
};
