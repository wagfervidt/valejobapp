const sortArray = require('../list/SORT.runtime');

module.exports = ([array, x, decimalPlaces]) => {
  const significantDigits = (decimalPlaces === undefined) ? 3 : decimalPlaces;
  if (!Array.isArray(array)) {
    return null;
  }
  const validArray = sortArray([array.filter(item => (typeof item === 'number' && Number.isFinite(item))), 'asc']);
  const uniques = Array.from(new Set(validArray));
  const { length: n } = validArray;
  const { length: m } = uniques;
  const power = 10 ** significantDigits;
  if (!m) {
    return null;
  }
  let i = 0;

  while (i < m) {
    if (x === uniques[i]) {
      const result = (array.indexOf(uniques[i]) + 1) / (n + 1);
      return Math.round(result * power) / power;
    } if (x >= uniques[i] && (x < uniques[i + 1])) {
      const index = array.indexOf(uniques[i + 1]);
      const result = (index + (x - uniques[i]) / (uniques[i + 1] - uniques[i])) / (n + 1);
      return Math.round(result * power) / power;
    }
    // eslint-disable-next-line no-plusplus
    i++;
  }
  return null;
};
